

/home/maribu/Repos/software/RIOT/dist/tools/pyterm/pyterm -p "/dev/ttyACM0" -b "115200" --no-reconnect --noprefix --no-repeat-command-on-empty-line 
Connect to serial port /dev/ttyACM0
Welcome to pyterm!
Type '/exit' to exit.
[1F[0J[?25h[0;39;49mBench Clock Reset Complete

ATE0-->ATE0
OK
AT+BLEINIT=0-->OK
AT+CWMODE=0-->OK

main(): This is RIOT! (Version: buildtest)
Starting shell...
> help
mutex_timeout_long_unlocked

> 
> help
Command              Description
---------------------------------------
mutex_timeout_long_unlocked unlocked mutex (no-spin timeout)
mutex_timeout_long_locked locked mutex (no-spin timeout)
mutex_timeout_long_locked_low lock low-prio-locked-mutex from high-prio-thread (no-spin timeout)
mutex_timeout_short_unlocked unlocked mutex (spin timeout)
mutex_timeout_short_locked locked mutex (spin timeout)
> mutex_timeout_long_unlocked
starting test: xtimer mutex lock timeout
OK

> mutex_timeout_long_locked
mutex_timeout_long_locked
starting test: xtimer mutex lock timeout
OK

> mutex_timeout_long_locked_low
mutex_timeout_long_locked_low
starting test: xtimer mutex lock timeout with thread
threads = 2
THREAD low prio: start
MAIN THREAD: calling xtimer_mutex_lock_timeout
OK
threads = 3
MAIN THREAD: waiting for created thread to end
THREAD low prio: exiting low
{ "threads": [{ "name": "thread_low_prio_test", "stack_size": 1024, "stack_used": 236 }]}
threads = 2

> mutex_timeout_short_locked
mutex_timeout_short_locked
starting test: xtimer mutex lock timeout with short timeout and locked mutex
OK

> mutex_timeout_short_unlocked
mutex_timeout_short_unlocked
starting test: xtimer mutex lock timeout with short timeout and unlocked mutex
OK

> 
