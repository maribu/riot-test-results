miniterm.py --eol LF "/dev/ttyACM0" "115200"  
--- Miniterm on /dev/ttyACM0  115200,8,N,1 ---
--- Quit: Ctrl+] | Menu: Ctrl+T | Help: Ctrl+T followed by Ctrl+H ---
 ␛[K)!B{11main(): This is RIOT! (Version: buildtest)
-- Executing boot.py
boot.py: MicroPython says hello!
-- boot.py exited. Starting REPL..
MicroPython bb8e51f on 2023-01-10; riot-qn9080dk with qn908x
Type "help()" for more information.
>>> print("echo this! " * 4)
print("echo this! " * 4)
echo this! echo this! echo this! echo this! 
>>>import riot
print(riot.thread_getpid())
 import riot
>>> print(riot.thread_getpid())
1
>>>import utime
 import utime
>>>utime.time()
 utime.time()
321
>>>utime.sleep_ms(0)
 utime.sleep_ms(0)
>>>utime.time()
 utime.time()
442
>>> test_sleep(0, 1000): slept 121ms
utime.time()
utime.time()
503
>>>utime.sleep_ms(50)
 utime.sleep_ms(50)
>>> utime.time()
utime.time()
672
>>>test_sleep(50, 133): slept 169ms
utime.time()
 utime.time()
732
>>>utime.sleep_ms(250)
 utime.sleep_ms(250)
>>> utime.time()
utime.time()
1101
>>> test_sleep(250, 133): slept 369ms
utime.time()
utime.time()
1162
>>>utime.sleep_ms(500)
 utime.sleep_ms(500)
>>> utime.time()
utime.time()
1780
>>>test_sleep(500, 133): slept 618ms
import xtimer
 import xtimer
>>> a = 0
a = 0
>>> def inc_a(): global a; a+=1
def inc_a(): global a; a+=1
... 

>>>t = xtimer.xtimer(inc_a)
 t = xtimer.xtimer(inc_a)
>>>utime.time()
 utime.time()
2131
>>>t.set(500000)
 t.set(500000)
>>>while a==0: pass
 while a==0: pass
...
 
>>> utime.time()
utime.time()
2748
>>> [TEST PASSED]

