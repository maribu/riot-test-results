

/software/RIOT/tests/xtimer_mutex_lock_timeout/bin/native/tests_xtimer_mutex_lock_timeout.elf /dev/ttyACM0 
RIOT native interrupts/signals initialized.
RIOT native board initialized.
RIOT native hardware initialization complete.

main(): This is RIOT! (Version: buildtest)
Starting shell...
> 
> 
> help
mutex_timeout_long_unlocked
help
Command              Description
---------------------------------------
mutex_timeout_long_unlocked unlocked mutex (no-spin timeout)
mutex_timeout_long_locked locked mutex (no-spin timeout)
mutex_timeout_long_locked_low lock low-prio-locked-mutex from high-prio-thread (no-spin timeout)
mutex_timeout_short_unlocked unlocked mutex (spin timeout)
mutex_timeout_short_locked locked mutex (spin timeout)
> mutex_timeout_long_unlocked
starting test: xtimer mutex lock timeout
OK

> mutex_timeout_long_locked
mutex_timeout_long_locked
starting test: xtimer mutex lock timeout
OK

> mutex_timeout_long_locked_low
mutex_timeout_long_locked_low
starting test: xtimer mutex lock timeout with thread
threads = 2
THREAD low prio: start
MAIN THREAD: calling xtimer_mutex_lock_timeout
OK
threads = 3
MAIN THREAD: waiting for created thread to end
THREAD low prio: exiting low
{ "threads": [{ "name": "thread_low_prio_test", "stack_size": 8192, "stack_used": 864 }]}
threads = 2

> mutex_timeout_short_locked
mutex_timeout_short_locked
starting test: xtimer mutex lock timeout with short timeout and locked mutex
OK

> mutex_timeout_short_unlocked
mutex_timeout_short_unlocked
starting test: xtimer mutex lock timeout with short timeout and unlocked mutex
OK

> 
