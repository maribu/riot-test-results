miniterm.py --eol LF "/dev/ttyACM0" "115200"  
--- Miniterm on /dev/ttyACM0  115200,8,N,1 ---
--- Quit: Ctrl+] | Menu: Ctrl+T | Help: Ctrl+T followed by Ctrl+H ---
]␛[K ␛[K{!B{1main(): This is RIOT! (Version: buildtest)
-- Executing boot.py
boot.py: MicroPython says hello!
-- boot.py exited. Starting REPL..
MicroPython bb8e51f on 2023-04-21; riot-qn9080dk with qn908x
Type "help()" for more information.
>>>print("echo this! " * 4)
 print("echo this! " * 4)
echo this! echo this! echo this! echo this! 
>>>import riot
print(riot.thread_getpid())
 import riot
>>> print(riot.thread_getpid())
1
>>>import utime
 import utime
>>> utime.time()
utime.time()
319
>>> utime.sleep_ms(0)
utime.sleep_ms(0)
>>>utime.time()
 utime.time()
438
>>> test_sleep(0, 1000): slept 119ms
utime.time()
utime.time()
498
>>> utime.sleep_ms(50)
utime.sleep_ms(50)
>>>utime.time()
 utime.time()
665
>>> test_sleep(50, 130): slept 167ms
utime.time()
utime.time()
725
>>> utime.sleep_ms(250)
utime.sleep_ms(250)
>>>utime.time()
 utime.time()
1092
>>> test_sleep(250, 130): slept 367ms
utime.time()
utime.time()
1152
>>>utime.sleep_ms(500)
 utime.sleep_ms(500)
>>>utime.time()
 utime.time()
1769
>>> test_sleep(500, 130): slept 617ms
import xtimer
import xtimer
>>> a = 0
a = 0
>>> def inc_a(): global a; a+=1
def inc_a(): global a; a+=1
...
 
>>>t = xtimer.xtimer(inc_a)
 t = xtimer.xtimer(inc_a)
>>>utime.time()
 utime.time()
2119
>>> t.set(500000)
t.set(500000)
>>> while a==0: pass
while a==0: pass
... 

>>>utime.time()
 utime.time()
2735
>>>[TEST PASSED]

